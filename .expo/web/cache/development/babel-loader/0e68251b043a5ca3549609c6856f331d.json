{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport * as React from 'react';\nimport { BaseNavigationContainer } from '@react-navigation/core';\nimport ThemeProvider from \"./theming/ThemeProvider\";\nimport DefaultTheme from \"./theming/DefaultTheme\";\nimport useBackButton from \"./useBackButton\";\nvar NavigationContainer = React.forwardRef(function NavigationContainer(_ref, ref) {\n  var _ref$theme = _ref.theme,\n      theme = _ref$theme === void 0 ? DefaultTheme : _ref$theme,\n      rest = _objectWithoutProperties(_ref, [\"theme\"]);\n\n  var refContainer = React.useRef(null);\n  useBackButton(refContainer);\n  React.useImperativeHandle(ref, function () {\n    return refContainer.current;\n  });\n  return React.createElement(ThemeProvider, {\n    value: theme\n  }, React.createElement(BaseNavigationContainer, _extends({}, rest, {\n    ref: refContainer\n  })));\n});\nexport default NavigationContainer;","map":{"version":3,"sources":["NavigationContainer.tsx"],"names":["NavigationContainer","theme","DefaultTheme","rest","refContainer","React","useBackButton"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,uBAAA,QAAA,wBAAA;AAKA,OAAA,aAAA;AACA,OAAA,YAAA;AACA,OAAA,aAAA;AAkBA,IAAMA,mBAAmB,GAAG,KAAK,CAAL,UAAA,CAAiB,SAAA,mBAAA,CAAA,IAAA,EAAA,GAAA,EAG3C;AAAA,mBAAA,IAAA,CAFEC,KAEF;AAAA,MAFEA,KAEF,2BAFUC,YAEV;AAAA,MAF2BC,IAE3B,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,OAAA,CAAA,CAAA;;AACA,MAAMC,YAAY,GAAGC,KAAK,CAALA,MAAAA,CAArB,IAAqBA,CAArB;AAEAC,EAAAA,aAAa,CAAbA,YAAa,CAAbA;AAEAD,EAAAA,KAAK,CAALA,mBAAAA,CAAAA,GAAAA,EAA+B;AAAA,WAAMD,YAAY,CAAjDC,OAA+B;AAAA,GAA/BA;AAEA,SACE,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA;AAAe,IAAA,KAAK,EAAEJ;AAAtB,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,uBAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAAmC,IAAA,GAAG,EAAEG;AAAxC,GAAA,CAAA,CADF,CADF;AAVF,CAA4B,CAA5B;AAiBA,eAAA,mBAAA","sourcesContent":["import * as React from 'react';\nimport {\n  BaseNavigationContainer,\n  NavigationContainerProps,\n  NavigationContainerRef,\n} from '@react-navigation/core';\nimport ThemeProvider from './theming/ThemeProvider';\nimport DefaultTheme from './theming/DefaultTheme';\nimport useBackButton from './useBackButton';\nimport { Theme } from './types';\n\ntype Props = NavigationContainerProps & {\n  theme?: Theme;\n};\n\n/**\n * Container component which holds the navigation state\n * designed for mobile apps.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.theme Theme object for the navigators.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nconst NavigationContainer = React.forwardRef(function NavigationContainer(\n  { theme = DefaultTheme, ...rest }: Props,\n  ref: React.Ref<NavigationContainerRef>\n) {\n  const refContainer = React.useRef<NavigationContainerRef>(null);\n\n  useBackButton(refContainer);\n\n  React.useImperativeHandle(ref, () => refContainer.current);\n\n  return (\n    <ThemeProvider value={theme}>\n      <BaseNavigationContainer {...rest} ref={refContainer} />\n    </ThemeProvider>\n  );\n});\n\nexport default NavigationContainer;\n"]},"metadata":{},"sourceType":"module"}