{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\vitor\\\\Desktop\\\\covidApp\\\\covid\\\\src\\\\screens\\\\Home.js\";\nimport React, { Component } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nfunction HomeScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    }\n  }, \"Home Screen\"));\n}\n\nfunction CountryScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    }\n  }, \"Country Data\"));\n}\n\nvar Stack = createStackNavigator();\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      return fetch('https://pomber.github.io/covid19/timeseries.json').then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        _this2.setState({\n          isLoading: false,\n          dataSource: responseJson.Brazil\n        }, function () {});\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            padding: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          }\n        }, React.createElement(ActivityIndicator, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          }\n        }));\n      }\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          paddingTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        }\n      }, React.createElement(FlatList, {\n        data: this.state.dataSource,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            }\n          }, item.date, \", \", item.confirmed);\n        },\n        keyExtractor: function keyExtractor(_ref2, index) {\n          var date = _ref2.date;\n          return date;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["C:/Users/vitor/Desktop/covidApp/covid/src/screens/Home.js"],"names":["React","Component","NavigationContainer","createStackNavigator","HomeScreen","flex","alignItems","justifyContent","CountryScreen","Stack","App","props","state","isLoading","fetch","then","response","json","responseJson","setState","dataSource","Brazil","catch","error","console","padding","paddingTop","item","date","confirmed","index"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;;AAEA,SAASC,UAAT,GAAsB;AACpB,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,UAAU,EAAE,QAAvB;AAAiCC,MAAAA,cAAc,EAAE;AAAjD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF;AAKD;;AACD,SAASC,aAAT,GAAyB;AACvB,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEH,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,UAAU,EAAE,QAAvB;AAAiCC,MAAAA,cAAc,EAAE;AAAjD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF;AAKD;;AAED,IAAME,KAAK,GAAGN,oBAAoB,EAAlC;;IAEqBO,G;;;AACnB,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAb;AAFiB;AAGlB;;;;wCAEmB;AAAA;;AAClB,aAAOC,KAAK,CAAC,kDAAD,CAAL,CACJC,IADI,CACC,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADT,EAEJF,IAFI,CAEC,UAAAG,YAAY,EAAI;AACpB,QAAA,MAAI,CAACC,QAAL,CACE;AACEN,UAAAA,SAAS,EAAE,KADb;AAEEO,UAAAA,UAAU,EAAEF,YAAY,CAACG;AAF3B,SADF,EAKE,YAAY,CAAG,CALjB;AAOD,OAVI,EAWJC,KAXI,CAWE,UAAAC,KAAK,EAAI;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,OAbI,CAAP;AAcD;;;6BAEQ;AACP,UAAI,KAAKX,KAAL,CAAWC,SAAf,EAA0B;AACxB,eACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAER,YAAAA,IAAI,EAAE,CAAR;AAAWoB,YAAAA,OAAO,EAAE;AAApB,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD;;AAED,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEpB,UAAAA,IAAI,EAAE,CAAR;AAAWqB,UAAAA,UAAU,EAAE;AAAvB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAE,KAAKd,KAAL,CAAWQ,UADnB;AAEE,QAAA,UAAU,EAAE;AAAA,cAAGO,IAAH,QAAGA,IAAH;AAAA,iBACV,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,aACGA,IAAI,CAACC,IADR,QACgBD,IAAI,CAACE,SADrB,CADU;AAAA,SAFd;AAOE,QAAA,YAAY,EAAE,6BAAWC,KAAX;AAAA,cAAGF,IAAH,SAAGA,IAAH;AAAA,iBAAqBA,IAArB;AAAA,SAPhB;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAaD;;;;EA7C8B3B,S;;SAAZS,G","sourcesContent":["import React, {Component} from 'react';\r\nimport { FlatList, ActivityIndicator, Text, View } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nfunction HomeScreen() {\r\n  return (\r\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n      <Text>Home Screen</Text>\r\n    </View>\r\n  );\r\n}\r\nfunction CountryScreen() {\r\n  return (\r\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n      <Text>Country Data</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isLoading: true };\r\n  }\r\n\r\n  componentDidMount() {\r\n    return fetch('https://pomber.github.io/covid19/timeseries.json')\r\n      .then(response => response.json())\r\n      .then(responseJson => {\r\n        this.setState(\r\n          {\r\n            isLoading: false,\r\n            dataSource: responseJson.Brazil,\r\n          },\r\n          function () { }\r\n        );\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return (\r\n        <View style={{ flex: 1, padding: 20 }}>\r\n          <ActivityIndicator />\r\n        </View>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <View style={{ flex: 1, paddingTop: 20 }}>\r\n        <FlatList\r\n          data={this.state.dataSource}\r\n          renderItem={({ item }) => (\r\n            <Text>\r\n              {item.date}, {item.confirmed}\r\n            </Text>\r\n          )}\r\n          keyExtractor={({ date }, index) => date}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}